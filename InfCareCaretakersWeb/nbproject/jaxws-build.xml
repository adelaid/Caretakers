<?xml version="1.0" encoding="UTF-8"?><!--
        *** GENERATED FROM jax-ws.xml - DO NOT EDIT !                             ***
        *** TO MODIFY wsimport options USE Web Service node -> Edit WS Attributes ***
        *** TO CHANGE TARGETS GENERATED TO jaxws-build.xml COPY THOSE             ***
        *** TARGETS TO ../build.xml AND MODIFY THAT FILE INSTEAD                  ***

        --><project xmlns:xalan="http://xml.apache.org/xslt" xmlns:webproject2="http://www.netbeans.org/ns/web-project/2" xmlns:jaxws="http://www.netbeans.org/ns/jax-ws/1">
    <!--
                ===================
                JAX-WS WSGEN SECTION
                ===================
            -->
    <!--
                ===================
                JAX-WS WSIMPORT SECTION
                ===================
            -->
    <target name="wsimport-init" depends="init">
        <fail if="${wsimport.bad.version}" message="WsImport ant task defined in the classpath ${j2ee.platform.wsimport.classpath} has a serious bug. See http://wiki.netbeans.org/MetroIssue for details."/>
        <mkdir dir="${build.generated.sources.dir}/jax-ws"/>
        <property name="j2ee.platform.wsimport.classpath" value="${libs.jaxws21.classpath}"/>
        <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
            <classpath path="${java.home}/../lib/tools.jar:${j2ee.platform.wsimport.classpath}:${javac.classpath}"/>
        </taskdef>
        <condition property="conf-dir" value="${conf.dir}/" else="">
            <isset property="conf.dir"/>
        </condition>
    </target>
    <target name="wsimport-client-CaretakerWS" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/CaretakerWS"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/CaretakerWS" destdir="${build.generated.dir}/jax-wsCache/CaretakerWS" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/CaretakerWS/wsdl/localhost_8080/CaretakerWS/CaretakerWS.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/CaretakerWS/CaretakerWS?wsdl" xnocompile="true" xendorsed="true">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/CaretakerWS/wsdl/localhost_8080/CaretakerWS/CaretakerWS.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/CaretakerWS"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/CaretakerWS">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-CaretakerWS" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws"/>
        <delete dir="${build.generated.dir}/jax-wsCache/CaretakerWS"/>
    </target>
    <target name="wsimport-client-TimeReferenceWS" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/TimeReferenceWS"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/TimeReferenceWS" destdir="${build.generated.dir}/jax-wsCache/TimeReferenceWS" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/TimeReferenceWS/wsdl/localhost_8080/TimeReferenceWS/TimeReferenceWS.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/TimeReferenceWS/TimeReferenceWS?wsdl" xnocompile="true" xendorsed="true">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/TimeReferenceWS/wsdl/localhost_8080/TimeReferenceWS/TimeReferenceWS.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/TimeReferenceWS"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/TimeReferenceWS">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-TimeReferenceWS" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws"/>
        <delete dir="${build.generated.dir}/jax-wsCache/TimeReferenceWS"/>
    </target>
    <target name="wsimport-client-PatientWS" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/PatientWS"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/PatientWS" destdir="${build.generated.dir}/jax-wsCache/PatientWS" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/PatientWS/wsdl/localhost_8080/PatientWS/PatientWS.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/PatientWS/PatientWS?wsdl" xnocompile="true" xendorsed="true">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/PatientWS/wsdl/localhost_8080/PatientWS/PatientWS.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/PatientWS"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/PatientWS">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-PatientWS" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws"/>
        <delete dir="${build.generated.dir}/jax-wsCache/PatientWS"/>
    </target>
    <target name="wsimport-client-NeedWS" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/NeedWS"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/NeedWS" destdir="${build.generated.dir}/jax-wsCache/NeedWS" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/NeedWS/wsdl/localhost_8080/NeedWS/NeedWS.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/NeedWS/NeedWS?wsdl" xnocompile="true" xendorsed="true">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/NeedWS/wsdl/localhost_8080/NeedWS/NeedWS.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/NeedWS"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/NeedWS">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-NeedWS" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws"/>
        <delete dir="${build.generated.dir}/jax-wsCache/NeedWS"/>
    </target>
    <target name="wsimport-client-VisitWS" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/VisitWS"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/VisitWS" destdir="${build.generated.dir}/jax-wsCache/VisitWS" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/VisitWS/wsdl/localhost_8080/VisitWS/VisitWS.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/VisitWS/VisitWS?wsdl" xnocompile="true" xendorsed="true">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/VisitWS/wsdl/localhost_8080/VisitWS/VisitWS.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/VisitWS"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/VisitWS">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-VisitWS" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws"/>
        <delete dir="${build.generated.dir}/jax-wsCache/VisitWS"/>
    </target>
    <target name="wsimport-client-generate" depends="wsimport-client-CaretakerWS, wsimport-client-TimeReferenceWS, wsimport-client-PatientWS, wsimport-client-NeedWS, wsimport-client-VisitWS"/>
</project>
